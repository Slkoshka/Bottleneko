namespace Bottleneko.Api.Protocols;

public enum TwitchSubscriptionTopic
{
    ChannelCheer,
    ChannelUpdate,
    ChannelFollow,
    ChannelAdBreakBegin,
    ChannelChatMessage,
    ChannelSubscribe,
    ChannelSubscriptionEnd,
    ChannelSubscriptionGift,
    ChannelSubscriptionMessage,
    ChannelRaidTo,
    ChannelRaidFrom,
    ChannelBan,
    ChannelUnban,
    ChannelModeratorAdd,
    ChannelModeratorRemove,
    ChannelChannelPointsCustomRewardAdd,
    ChannelChannelPointsCustomRewardUpdate,
    ChannelChannelPointsCustomRewardRemove,
    ChannelChannelPointsCustomRewardRedemptionAdd,
    ChannelChannelPointsCustomRewardRedemptionUpdate,
    ChannelPollBegin,
    ChannelPollProgress,
    ChannelPollEnd,
    ChannelPredictionBegin,
    ChannelPredictionProgress,
    ChannelPredictionLock,
    ChannelPredictionEnd,
    ChannelSuspiciousUserUpdate,
    ChannelSuspiciousUserMessage,
    ChannelVipAdd,
    ChannelVipRemove,
    ChannelWarningAcknowledge,
    ChannelWarningSend,
    ChannelHypeTrainBegin,
    ChannelHypeTrainProgress,
    ChannelHypeTrainEnd,
    ChannelCharityCampaignDonate,
    ChannelCharityCampaignStart,
    ChannelCharityCampaignProgress,
    ChannelCharityCampaignStop,
    ChannelShieldModeBegin,
    ChannelShieldModeEnd,
    ChannelShoutoutCreate,
    ChannelShoutoutReceive,
    ChannelGoalBegin,
    ChannelGoalProgress,
    ChannelGoalEnd,
    StreamOnline,
    StreamOffline,
    UserUpdate,
    UserWhisperMessage,
}

public enum TwitchScope
{
    AnalyticsReadExtensions,
    AnalyticsReadGames,
    BitsRead,
    ChannelBot,
    ChannelEditCommercial,
    ChannelManageAds,
    ChannelManageBroadcast,
    ChannelManageExtensions,
    ChannelManageGuestStar,
    ChannelManageModerators,
    ChannelManagePolls,
    ChannelManagePredictions,
    ChannelManageRaids,
    ChannelManageRedemptions,
    ChannelManageSchedule,
    ChannelManageVideos,
    ChannelManageVips,
    ChannelModerate,
    ChannelReadAds,
    ChannelReadCharity,
    ChannelReadEditors,
    ChannelReadGoals,
    ChannelReadGuestStar,
    ChannelReadHypeTrain,
    ChannelReadPolls,
    ChannelReadPredictions,
    ChannelReadRedemptions,
    ChannelReadStreamKey,
    ChannelReadSubscriptions,
    ChannelReadVips,
    ClipsEdit,
    ModerationRead,
    ModeratorManageAnnouncements,
    ModeratorManageAutomod,
    ModeratorManageAutomodSettings,
    ModeratorManageBannedUsers,
    ModeratorManageBlockedTerms,
    ModeratorManageChatMessages,
    ModeratorManageChatSettings,
    ModeratorManageGuestStar,
    ModeratorManageShieldMode,
    ModeratorManageShoutouts,
    ModeratorManageUnbanRequests,
    ModeratorManageWarnings,
    ModeratorReadAutomodSettings,
    ModeratorReadBannedUsers,
    ModeratorReadBlockedTerms,
    ModeratorReadChatMessages,
    ModeratorReadChatSettings,
    ModeratorReadChatters,
    ModeratorReadFollowers,
    ModeratorReadGuestStar,
    ModeratorReadModerators,
    ModeratorReadShieldMode,
    ModeratorReadShoutouts,
    ModeratorReadSuspiciousUsers,
    ModeratorReadUnbanRequests,
    ModeratorReadVips,
    ModeratorReadWarnings,
    UserBot,
    UserEdit,
    UserEditBroadcast,
    UserManageBlockedUsers,
    UserManageChatColor,
    UserManageWhispers,
    UserReadBlockedUsers,
    UserReadBroadcast,
    UserReadChat,
    UserReadEmail,
    UserReadEmotes,
    UserReadFollows,
    UserReadModeratedChannels,
    UserReadSubscriptions,
    UserReadWhispers,
    UserWriteChat,
}

[SerializeAsJson]
public record TwitchAuth(string ClientId, string Me, string AccessToken, string RefreshToken, TwitchScope[] Scopes);

[SerializeAsJson]
public record TwitchProtocolChannel(string Name, TwitchSubscriptionTopic[] EventSubscriptions);

public record TwitchProtocolConfiguration(TwitchAuth Auth, bool ReceiveEvents, TwitchProtocolChannel[] Channels, string? ProxyId = null) : ProtocolConfiguration;
